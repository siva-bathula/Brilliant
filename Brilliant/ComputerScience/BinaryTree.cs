using System;
using System.Linq;
using System.Collections.Generic;
using GenericDefs.Classes.Collections;
using GenericDefs.DotNet;
using GenericDefs.Classes.NumberTypes;

namespace Brilliant.ComputerScience
{
    public class BinaryTree : ISolve, IBrilliant
    {
        Brilliant thisProblem;
        Brilliant IBrilliant.ProblemDefOnBrilliantOrg
        {
            get { return thisProblem; }
        }

        void ISolve.Init()
        {
            thisProblem = new Brilliant("");
        }

        internal class P1Data
        {
            internal BinaryTree<int> BTree { get; set; }
            string BTreeArrayStr = "[71, 82, 16, 67, 96, 59, 87, 51, 91, 6, 29, 23, 84, 78, 27, 70, 12, 48, 22, 43, 61, 43, 62, 30, 70, 12, 64, 19, 0, 34, 37, 91, 3, 61, 57, 10, 43, 62, 16, 28, 10, 30, 29, 62, 74, 36, 37, 32, 20, 15, 44, 13, 16, 40, 37, 51, 97, 77, 70, 79, 20, 49, 92, 99, 54, 41, 86, 79, 51, 7, 10, 79, 85, 24, 37, 84, 36, 10, 55, 85, 71, 10, 20, 83, 85, 83, 37, 64, 83, 98, 21, 62, 71, 6, 17, 40, 92, 51, 15, 78, 31, 45, 83, 91, 81, 46, 34, 6, 71, 77, 89, 98, 24, 6, 74, 83, 19, 50, 88, 85, 29, 42, 58, 16, 88, 46, 18, 99, 15, 95, 92, 51, 50, 32, 79, 85, 37, 58, 82, 69, 17, 25, 92, 4, 55, 69, 97, 74, 92, 28, 92, 1, 49, 65, 11, 62, 14, 44, 48, 42, 69, 66, 7, 57, 90, 76, 33, 72, 43, 94, 44, 11, 61, 71, 76, 10, 26, 67, 22, 47, 1, 34, 41, 10, 10, 64, 100, 0, 85, 47, 11, 50, 6, 14, 15, 92, 31, 13, 12, 93, 92, 20, 39, 29, 45, 69, 40, 96, 13, 80, 11, 49, 9, 13, 56, 80, 40, 77, 43, 56, 76, 99, 25, 23, 68, 35, 60, 26, 6, 87, 59, 32, 90, 69, 9, 60, 68, 61, 22, 57, 0, 29, 87, 83, 10, 43, 4, 81, 2, 3, 68, 35, 33, 68, 18, 30, 27, 50, 12, 9, 47, 98, 28, 41, 34, 3, 53, 64, 51, 9, 93, 68, 78, 96, 37, 78, 82, 22, 48, 25, 92, 24, 46, 33, 45, 33, 88, 68, 16, 7, 28, 46, 24, 15, 53, 6, 3, 41, 95, 24, 68, 21, 47, 77, 49, 36, 88, 83, 40, 1, 66, 14, 83, 66, 10, 67, 49, 26, 35, 86, 4, 2, 53, 81, 85, 34, 96, 4, 22, 13, 71, 23, 74, 33, 24, 38, 90, 47, 41, 13, 75, 91, 40, 7, 56, 26, 47, 54, 68, 43, 16, 15, 58, 39, 26, 11, 72, 92, 88, 79, 61, 16, 35, 18, 39, 79, 47, 93, 9, 26, 51, 92, 4, 38, 85, 100, 80, 81, 44, 98, 9, 100, 20, 62, 31, 0, 97, 86, 88, 10, 91, 66, 52, 82, 72, 60, 80, 64, 9, 94, 59, 10, 21, 63, 82, 94, 24, 19, 81, 20, 28, 39, 19, 61, 83, 12, 95, 68, 52, 92, 41, 75, 84, 88, 92, 65, 90, 55, 45, 49, 87, 48, 13, 42, 71, 3, 32, 76, 2, 44, 26, 71, 23, 64, 31, 11, 75, 88, 33, 66, 54, 11, 64, 57, 43, 81, 85, 2, 66, 15, 42, 6, 55, 22, 1, 5, 36, 9, 78, 31, 88, 12, 20, 48, 22, 16, 2, 13, 95, 95, 66, 35, 51, 14, 46, 47, 56, 50, 4, 73, 59, 17, 5, 84, 40, 19, 20, 20, 95, 13, 15, 53, 92, 25, 7, 86, 6, 0, 72, 63, 68, 18, 59, 58, 18, 70, 60, 20, 56, 95, 7, 34, 18, 91, 96, 12, 91, 14, 5, 29, 53, 55, 97, 66, 8, 79, 86, 37, 18, 26, 9, 30, 49, 71, 33, 8, 10, 74, 11, 56, 16, 59, 61, 45, 38, 44, 33, 58, 69, 73, 6, 48, 64, 38, 21, 11, 99, 92, 25, 45, 54, 12, 34, 12, 52, 58, 25, 61, 54, 45, 61, 78, 38, 81, 32, 15, 96, 19, 4, 66, 54, 30, 22, 65, 79, 57, 9, 11, 12, 99, 53, 51, 3, 91, 46, 50, 70, 47, 9, 24, 44, 95, 8, 24, 92, 93, 46, 60, 73, 99, 61, 92, 72, 59, 42, 39, 56, 98, 35, 55, 31, 49, 56, 78, 9, 45, 5, 75, 0, 29, 3, 47, 72, 17, 23, 57, 96, 71, 0, 16, 41, 6, 63, 36, 65, 75, 51, 46, 25, 60, 44, 46, 78, 97, 82, 73, 90, 80, 98, 70, 76, 40, 3, 86, 34, 43, 100, 89, 70, 90, 12, 31, 67, 68, 65, 62, 41, 60, 6, 56, 15, 47, 71, 65, 10, 16, 89, 62, 57, 48, 30, 61, 46, 25, 40, 54, 16, 64, 26, 29, 10, 29, 50, 38, 27, 63, 97, 24, 1, 59, 48, 90, 0, 5, 87, 74, 93, 13, 84, 33, 10, 3, 34, 87, 29, 28, 19, 89, 69, 23, 34, 93, 3, 53, 24, 61, 80, 62, 72, 29, 57, 25, 46, 11, 11, 8, 97, 21, 7, 51, 19, 58, 6, 70, 11, 70, 55, 40, 41, 99, 31, 34, 16, 59, 93, 98, 16, 54, 28, 32, 62, 95, 10, 84, 81, 80, 49, 25, 22, 57, 95, 17, 50, 65, 64, 85, 28, 48, 69, 94, 30, 71, 78, 39, 20, 55, 53, 38, 84, 2, 64, 19, 27, 10, 88, 36, 33, 62, 82, 42, 35, 41, 61, 46, 16, 0, 52, 35, 12, 25, 4, 19, 89, 18, 75, 74, 39, 39, 80, 21, 68, 82, 19, 78, 32, 2, 18, 93, 26, 25, 28, 40, 55, 6, 37, 46, 47, 76, 77, 87, 9, 0, 73, 56, 9, 16, 22, 22, 43, 38, 14, 23, 23, 99, 10, 8, 56, 91, 0, 38, 15, 53, 25, 49, 36, 75, 2, 81, 39, 56, 9, 85, 52, 1, 83, 68, 69, 31, 26, 5, 58, 88, 33, 33, 34, 22, 39, 30, 97, 97, 96, 65, 64, 82, 82, 3, 90, 64, 24, 61, 60, 21, 97, 84, 46, 79, 13, 35, 19, 42, 25, 84, 73, 98, 58, 48, 95, 42, 69, 62, 60, 77, 10, 35, 52, 77, 24, 90, 65, 24, 32, 73, 96, 67, 66, 79, 84, 13, 39, 76, 89, 74, 50, 32, 76, 52, 56, 99, 87, 15, 36, 72, 75, 91, 68, 9, 96, 3, 16, 55, 20, 0, 41, 34, 45, 69, 43, 89, 16, 26, 58, 72, 43, 64, 3, 79, 48, 6, 17, 62, 99, 94, 51, 57, 42, 37, 66, 96, 4, 4, 30, 21, 69, 71, 8, 76, 97, 74, 20, 76, 50, 88, 55, 64, 49, 47, 15, 25, 77, 74, 60, 1, 24, 45, 74, 83, 76, 58, 24, 6, 55, 96, 2, 25, 29, 74, 41, 43, 6, 71, 21, 54, 46, 68, 57, 16, 84, 21, 67, 38, 61, 95, 52, 74, 1, 61, 28, 53, 63, 53, 77, 63, 55, 16, 85, 72, 11, 0, 82, 11, 46, 79, 22, 14, 1, 53, 12, 84, 88, 33, 85, 80, 75, 76, 52, 3, 60, 93, 28, 93, 31, 50, 0, 79, 21, 25, 42, 14, 3, 40, 72, 71, 100, 100, 33, 45, 80, 13, 58, 79, 28, 41, 9, 97, 87, 29, 9, 87, 53, 19, 73, 34, 30, 39, 54, 42, 93, 0, 33, 4, 47, 8, 35, 66, 72, 36, 37, 13, 23, 39, 97, 0, 61, 69, 43, 28, 34, 28, 29, 26, 60, 17, 98, 41, 68, 20, 30, 67, 72, 32, 34, 54, 79, 1, 75, 23, 7, 93, 67, 41, 92, 31, 73, 21, 29, 60, 48, 100, 94, 96, 23, 32, 18, 13, 31, 48, 30, 4, 72, 41, 77, 77, 65, 93, 71, 90, 73, 86, 66, 98, 50, 44, 48, 8, 25, 97, 16, 9, 57, 63, 32, 46, 12, 3, 2, 65, 67, 92, 62, 30, 86, 56, 57, 98, 84, 77, 57, 80, 40, 45, 83, 0, 33, 78, 25, 27, 98, 55, 20, 86, 23, 6, 43, 28, 81, 2, 43, 57, 12, 27, 20, 19, 38, 7, 54, 5, 40, 68, 67, 59, 43, 54, 54, 86, 48, 91, 56, 94, 98, 88, 90, 82, 44, 32, 28, 63, 27, 21, 93, 40, 69, 21, 71, 73, 96, 9, 61, 66, 15, 75, 91, 28, 46, 8, 100, 29, 55, 91, 72, 87, 81, 70, 50, 19, 50, 21, 98, 14, 80, 79, 68, 93, 34, 69, 97, 50, 13, 97, 16, 1, 21, 21, 11, 14, 31, 33, 15, 71, 66, 86, 69, 12, 100, 1, 49, 62, 14, 67, 40, 15, 82, 63, 76, 77, 99, 29, 43, 0, 59, 11, 7, 75, 44, 30, 65, 62, 29, 77, 87, 69, 79, 3, 82, 78, 19, 74, 84, 43, 36, 75, 33, 70, 42, 89, 11, 75, 23, 33, 30, 21, 88, 32, 43, 75, 100, 38, 68, 14, 70, 75, 9, 26, 16, 36, 66, 59, 83, 91, 60, 74, 16, 6, 95, 39, 84, 67, 17, 9, 29, 30, 54, 77, 7, 4, 31, 86, 84, 16, 73, 42, 64, 40, 47, 77, 90, 34, 88, 13, 81, 31, 69, 67, 33, 39, 87, 17, 78, 53, 71, 89, 14, 39, 97, 41, 77, 28, 23, 51, 70, 97, 73, 5, 12, 69, 12, 89, 62, 61, 24, 38, 86, 32, 34, 31, 94, 22, 5, 20, 67, 59, 45, 9, 4, 43, 71, 32, 15, 29, 18, 35, 75, 20, 45, 24, 82, 21, 8, 39, 96, 91, 37, 16, 28, 69, 43, 30, 40, 94, 89, 92, 56, 59, 63, 42, 6, 82, 19, 71, 81, 63, 67, 82, 64, 53, 84, 18, 2, 32, 6, 51, 54, 46, 5, 21, 5, 59, 20, 25, 72, 35, 29, 6, 52, 35, 94, 65, 21, 81, 9, 8, 1, 41, 61, 53, 87, 39, 29, 30, 42, 14, 40, 91, 36, 40, 79, 50, 8, 49, 56, 66, 91, 95, 58, 96, 68, 16, 87, 13, 59, 44, 83, 73, 90, 14, 29, 7, 33, 82, 59, 14, 56, 31, 80, 64, 31, 31, 5, 34, 71, 74, 42, 0, 64, 16, 23, 62, 88, 86, 54, 67, 39, 49, 96, 48, 65, 23, 0, 12, 20, 18, 6, 35, 82, 44, 86, 8, 26, 29, 79, 3, 98, 38, 73, 58, 79, 97, 18, 70, 66, 92, 74, 50, 63, 66, 92, 79, 7, 1, 92, 38, 82, 65, 64, 28, 37, 95, 10, 60, 4, 35, 32, 91, 53, 42, 71, 22, 97, 23, 24, 23, 3, 7, 55, 21, 87, 45, 34, 47, 79, 92, 0, 35, 96, 79, 38, 27, 75, 44, 28, 76, 9, 45, 78, 72, 49, 43, 6, 71, 85, 39, 39, 55, 4, 43, 80, 36, 98, 57, 65, 42, 63, 100, 47, 7, 9, 31, 38, 22, 67, 91, 66, 47, 68, 31, 56, 29, 77, 70, 26, 76, 46, 69, 24, 71, 87, 66, 7, 28, 81, 15, 24, 57, 77, 91, 39, 57, 46, 83, 22, 92, 65, 14, 63, 82, 17, 94, 6, 71, 58, 22, 38, 54, 61, 82, 52, 89, 74, 57, 31, 19, 32, 29, 24, 69, 29, 7, 61, 89, 72, 88, 15, 58, 79, 24, 2, 67, 67, 66, 56, 87, 56, 96, 25, 64, 21, 98, 74, 44, 86, 44, 25, 85, 5, 37, 100, 53, 36, 58, 88, 93, 9, 51, 48, 54, 74, 59, 24, 10, 75, 9, 74, 61, 45, 91, 32, 70, 29, 99, 62, 92, 20, 71, 9, 65, 7, 7, 23, 45, 38, 72, 76, 34, 27, 97, 97, 17, 85, 62, 60, 36, 60, 1, 74, 72, 62, 81, 70, 77, 91, 92, 12, 78, 42, 99, 14, 21, 14, 96, 43, 64, 72, 67, 96, 99, 95, 1, 77, 75, 28, 14, 45, 78, 48, 57, 78, 20, 1, 25, 77, 45, 1, 35, 83, 22, 84, 98, 10, 4, 76, 75, 21, 40, 89, 93, 80, 77, 48, 36, 12, 87, 4, 58, 32, 19, 56, 41, 35, 5, 100, 79, 42, 30, 16, 60, 11, 10, 46, 69, 24, 92, 38, 53, 86, 61, 85, 67, 41, 88, 91, 26, 66, 48, 12, 35, 43, 88, 52, 52, 67, 68, 61, 39, 35, 0, 3, 17, 45, 41, 95, 42, 81, 74, 97, 78, 66, 75, 23, 35, 26, 13, 41, 83, 83, 56, 4, 25, 47, 75, 0, 47, 100, 65, 65, 78, 60, 57, 45, 60, 82, 34, 54, 52, 22, 67, 36, 40, 29, 8, 30, 20, 36, 26, 96, 39, 73, 54, 81, 91, 5, 74, 22, 5, 66, 10, 28, 62, 80, 22, 89, 28, 87, 96, 45, 32, 16, 63, 17, 68, 81, 57, 72, 61, 36, 7, 93, 13, 61, 79, 90, 20, 24, 78, 9, 5, 69, 98, 41]";
            internal void Init()
            {
                BTreeArrayStr = BTreeArrayStr.Substring(1, BTreeArrayStr.Length - 2).Replace(" ","");
                List<int> bTreeNumbers = new List<int>();
                (BTreeArrayStr.Split(new char[] { ',' }, StringSplitOptions.RemoveEmptyEntries).ToList()).ForEach(x => bTreeNumbers.Add(int.Parse(x)));
                
                BTree = new BinaryTree<int>(bTreeNumbers);
            }

            internal long GetLeastDistanceTravelledToGetAcorn()
            {
                Number<long> leastDistance = new Number<long>(long.MaxValue);
                BTree.FindLeastLeafDepth(leastDistance);
                return leastDistance.Value;
            }
        }

        void ISolve.Solve()
        {
            LazySquirrelLearnsProgramming();
        }

        /// <summary>
        /// https://brilliant.org/problems/lazy-squirrel-learns-programming-2/
        /// </summary>
        void LazySquirrelLearnsProgramming()
        {
            P1Data p = new P1Data();
            p.Init();
            QueuedConsole.WriteImmediate("Maximum child height : {0}", p.BTree.GetHeight());
            QueuedConsole.WriteImmediate("Minimum distance the squirrel has to walk : {0}", p.GetLeastDistanceTravelledToGetAcorn());
        }
    }
}